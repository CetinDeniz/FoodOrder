plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize' // For Safe Navigation Argument
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'androidx.navigation.safeargs.kotlin'
    id("com.google.devtools.ksp").version("1.6.21-1.0.5") // For Moshi Codegen
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.axuca.foodorder"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    /** Navigation */
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"

    /** Lifecycles and ViewModel*/
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"

    // For by viewModels() in activity
    implementation "androidx.activity:activity-ktx:1.4.0"

    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"

    // AppIntro - AndroidX Capable version
    implementation "com.github.AppIntro:AppIntro:$app_intro"

    /** DataStore */
    implementation "androidx.datastore:datastore-preferences:$data_store"

    /** Hilt - Dependency Injection */
//    implementation "com.google.dagger:hilt-android:$hilt"
//    kapt "com.google.dagger:hilt-compiler:$hilt"
    implementation "com.google.dagger:hilt-android:$dagger_hilt_old"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_old"

    /** Splash Screen */
    implementation "androidx.core:core-splashscreen:$splash_screen"

    /** Firebase */
    // Import the BoM for the Firebase platform
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom")

    // Firebase Authentication library
    implementation 'com.google.firebase:firebase-auth-ktx'

    // Firebase Database
    implementation 'com.google.firebase:firebase-database-ktx'

    /** Google Sign-In*/
    // Google Play services library
    implementation "com.google.android.gms:play-services-auth:$google_auth"

    /** Web service requests and result converting */
    // Retrofit and Moshi Converter
//    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_with_moshi"
    // Moshi and Codegen
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_codegen"
    ksp("com.squareup.moshi:moshi-kotlin-codegen:$moshi_codegen")

    /** Coil - Image loader */
    implementation "io.coil-kt:coil:$coil"

    /** Room */
//    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"

    /** Location */
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}